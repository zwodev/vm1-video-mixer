#version 310 es

layout(local_size_x = 16, local_size_y = 16) in;
uniform sampler2D inputTexture;
layout(rgba8, binding = 1) uniform writeonly mediump image2D outputImage;

void main() {
	//ivec2 texelCoords = ivec2(gl_GlobalInvocationID.xy);
	//vec4 texel = texelFetch(inputTexture, texelCoords, 0);
	//vec4 color = vec4(texel.r, texel.r, texel.r, 1.0f); 
	//imageStore(outputImage, texelCoords, color);

	uint src_x = gl_GlobalInvocationID.x;
    uint src_y = gl_GlobalInvocationID.y;


    // Bounds check for last strip
    if (src_x >= 2048u || src_y >= 1530u)
        return;

    // Fetch the color from the source texture
    vec4 color = texelFetch(inputTexture, ivec2(src_x, src_y), 0);

    // Now compute the destination coordinate (deswizzling logic)
    // Example: if your strips are 128 pixels wide:
	uint pixel_idx = src_y * 1920u + src_x;
	uint strip_idx = pixel_idx / (102u * 1920u);
	uint dst_y = (pixel_idx / 128u) % 1530u;
	uint dst_x = strip_idx * 128u + src_x % 128u;  

    // Write to the destination image
    imageStore(outputImage, ivec2(dst_x, dst_y), color);
}