#!/bin/sh

set -eu

# Create folders
chroot $1 mkdir /home/$IGconf_device_user1/vm1
chroot $1 mkdir /home/$IGconf_device_user1/videos
chroot $1 mkdir -p /home/$IGconf_device_user1/.local/share/org.localsend.localsend_app

# Copy Network Manager config
rsync -av ../data/NetworkManager.conf $1/etc/NetworkManager/

# Install localsend
rsync -av ../data/localsend/*.deb $1/tmp/
chroot $1 apt install -y /tmp/LocalSend-1.17.0-linux-arm-64.deb

cat ../data/localsend/shared_preferences.json.tpl | sed \
   -e "s|<VM1_VIDEO_DIR>|/home/$IGconf_device_user1/videos|g" \
   > $1/home/$IGconf_device_user1/.local/share/org.localsend.localsend_app/shared_preferences.json

cat ../data/localsend/localsend.service.tpl | sed \
   -e "s|<VM1_USER>|$IGconf_device_user1|g" \
   > $1/etc/systemd/system/localsend.service

# Configure plymouth (splash screen)
rsync -av ../data/vm1 $1/usr/share/plymouth/themes/
chroot $1 plymouth-set-default-theme -R vm1

# Add needed boot parameters to show splash and silence tty
CMDLINE="$1/boot/firmware/cmdline.txt"
PARAMS="splash quiet plymouth.ignore-serial-consoles logo.nologo loglevel=3 vt.global_cursor_default=0"

for param in $PARAMS; do
    if ! grep -qw "$param" "$CMDLINE"; then
        sed -i "s/$/ $param/" "$CMDLINE"
    fi
done

# Add user to render/video groups
chroot $1 sudo usermod -aG video $IGconf_device_user1
chroot $1 sudo usermod -aG render $IGconf_device_user1

# Copy custom config.txt (enable SPI, etc.)
rsync -av ../config.txt $1/boot/firmware/

# Enable access point
#chroot $1 sudo nmcli device wifi hotspot ssid vm1 password testtesttest

# Disable dnsmasq (conflicts with NetworkManager)
chroot $1 systemctl disable dnsmasq

# Autorun localsend
chroot $1 systemctl enable localsend

# Enable sshd
chroot $1 systemctl enable ssh

# Disable output on tty1 (prevent showing login after splash is disabled)
chroot $1 systemctl disable getty@tty1.service

# Copy data (TODO: use relative paths later)
rsync -av ../../../cpp/builddir/vm1 $1/home/$IGconf_device_user1/vm1/
rsync -av ../../../cpp/shaders $1/home/$IGconf_device_user1/vm1/
rsync -av ../../../cpp/fonts $1/home/$IGconf_device_user1/vm1/
rsync -av /usr/local/lib/libSDL* $1/usr/local/lib/
rsync -av ../../../cpp/builddir/subprojects/imgui/libimgui.so $1/usr/local/lib/

# Chown user folder (recursive)
chroot $1 chown -R $IGconf_device_user1:$IGconf_device_user1 /home/$IGconf_device_user1
#chroot $1 chown -R $IGconf_device_user1:$IGconf_device_user1 /home/$IGconf_device_user1/videos

# Copy gpio rules
rsync ../99-vm1.rules $1/etc/udev/rules.d/99-vm1.rules

# Copy install script
rsync ../install-vm1.sh $1/usr/local/bin/install-vm1.sh

# Copy autorun script
rsync ../autorun-vm1.sh $1/usr/local/bin/autorun-vm1.sh

# Write out our systemd service
rsync ../install-vm1.service $1/etc/systemd/system/install-vm1.service

# Trigger the systemd service to run on first boot
$BDEBSTRAP_HOOKS/enable-units "$1" install-vm1

APP="/usr/local/bin/autorun-vm1.sh"
cat ../autorun-vm1.service.tpl | sed \
   -e "s|<VM1_USER>|$IGconf_device_user1|g" \
   -e "s|<VM1_RUNDIR>|\/home\/$IGconf_device_user1|g" \
   -e "s|<VM1_APP>|$APP|g" \
   > $1/etc/systemd/system/autorun-vm1.service

# Trigger the systemd service to run only when everything is installed
$BDEBSTRAP_HOOKS/enable-units "$1" autorun-vm1
